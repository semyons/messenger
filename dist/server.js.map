{"version":3,"sources":["../server.js"],"names":["UserService","round","app","server","require","createServer","io","listen","Promise","connect","database","useMongoClient","err","console","log","userxl","connectedUsers","use","socket","next","handshakeData","request","_query","token","undefined","device","id","getUserByToken","user","handshake","doc","on","empty","login","findOne","docz","online","save","socketId","userId","push","data","callback","index","indexOf","length","splice","lastvisit","now","emit","message","reciver","dataxx","credentials","sender","dialogid","date","timestamp","parseInt","avatar","fio","firstname","lastname","create","_id","docsxl","lastmessage","forEach","sockets","connected","elem","String","trim","Array","Object","port","json","urlencoded","extended","static","resave","saveUninitialized","secret"],"mappings":"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","file":"server.js","sourcesContent":["/**\r\n * Created by Semyon on 30.03.2017.\r\n */\r\nimport express from 'express';\r\nimport mongoose from 'mongoose';\r\nimport session from 'express-session';\r\nimport bodyParser from 'body-parser';\r\nimport morgan from 'morgan';\r\nimport bluebird from 'bluebird';\r\nimport timestamp from 'unix-timestamp';\r\ntimestamp.round=true;\r\nimport config from './config';\r\nimport authRoute from './routes/auth';\r\nimport userRoute from './routes/user';\r\nimport pageRoute from './routes/page';\r\nimport DialogsRoute from './routes/dialogs';\r\nimport errorHandler from './middlewares/errorHandler';\r\nimport checkToken from './middlewares/checkToken';\r\nimport getUser from './middlewares/getUser';\r\nimport * as UserService from './services/UserService';\r\nimport smsru from './routes/smsru';\r\nimport AddSocialWebs from './routes/AddSocialWebs';\r\nimport pages from './routes/page';\r\nimport settings from './routes/settings';\r\nimport Messages from './models/Messages';\r\nimport Dialogs from './models/Dialogs';\r\n\r\nimport User from './models/user';\r\nconst app = express(),\r\n    server = require('http').createServer(app),\r\n    io = require('socket.io').listen(server);\r\nmongoose.Promise = bluebird;\r\n\r\nmongoose.connect(config.database, {useMongoClient: true}, err => {\r\n    if (err) {\r\n        throw err\r\n    }\r\n    console.log('MongoConnected');\r\n});\r\nserver.listen(3000);\r\nvar userxl = {};\r\nlet connectedUsers = {};\r\nio.use(async function (socket, next) {\r\n    let handshakeData = socket.request;\r\n\r\n    // Если есть токен\r\n    if (handshakeData._query.token !== undefined && connectedUsers[handshakeData._query.token] === undefined) {\r\n        let token = handshakeData._query.token;\r\n        let device = handshakeData._query.device;\r\n        if (device === undefined) {\r\n            device = '';\r\n        }\r\n        connectedUsers[token] = token;\r\n\r\n        // Мы - обычный пользователь\r\n        console.log({'socket': socket.id, 'token': token, 'device': device});\r\n\r\n        // авторизация пользователя\r\n        // Пытаемся найти пользователя у себя в базе\r\n        let user = await UserService.getUserByToken(token);\r\n        socket.handshake.doc = {token, user, device};\r\n        console.log({'find user': user});\r\n        console.log('-----------------------------------------s----------------------------------');\r\n        delete connectedUsers[token];\r\n        next();\r\n        // delete connectedUsers[token];\r\n\r\n    }\r\n    else {\r\n        if (connectedUsers[handshakeData._query.token] !== undefined) {\r\n            console.log({\r\n                'socket': socket.id,\r\n                'token': handshakeData._query.token,\r\n                'device': handshakeData._query.device + ' - canceled'\r\n            });\r\n        } else {\r\n            console.log({'socket': socket.id, 'token': 'none', 'device': handshakeData._query.device});\r\n        }\r\n    }\r\n\r\n});\r\n\r\nio.on('connection', function (socket) {\r\n    console.log('added new connection');\r\n    if (socket.handshake.doc.user){\r\n    if (empty(userxl[socket.handshake.doc.user.login])) {\r\n        // socket.nickname = socket;\r\n        // userxl[socket.nickname] = socket;\r\n        //Добавляем текущего пользователя в ОнЛайн, если его нет\r\n        User.findOne({login:socket.handshake.doc.user.login},function (err,docz) {\r\n            if(docz){\r\n                docz.online=true;\r\n                docz.save();\r\n            }\r\n            console.log('WOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOw');\r\n        });\r\n        userxl[socket.handshake.doc.user.login] = {\r\n            socketId: [socket.id],\r\n            userId: socket.handshake.doc.user.login,\r\n            device: [socket.handshake.doc.device],\r\n        };\r\n        console.log('add new user');\r\n\r\n    } else {\r\n        // Добавляем новый сокет, если такой пользователь уже существует\r\n        userxl[socket.handshake.doc.user.login].socketId.push(socket.id);\r\n        // socket.nickname = data;\r\n        // userxl[socket.nickname] = socket;\r\n\r\n        console.log('add new socket');\r\n    }}else{}\r\n    // socket.on('new user', function (data) {\r\n    //     console.log(data);\r\n    //     console.log(\"on new user\");\r\n    //\r\n    //\r\n    // });\r\n    socket.on('disconnect', async function (data, callback) {\r\n        let id = socket.handshake.doc.user.login;\r\n        // console.log('user disconnected: ' + login);\r\n        console.log('user disconnected: ' + id);\r\n\r\n        // Если текущий пользователь в онлайне\r\n        if (!empty(userxl[id])) {\r\n            // получаем индекс удаляемого сокета\r\n            let index = userxl[id].socketId.indexOf(socket.id);\r\n            // Спроверяем количество сокетов в онлайте у данного пользователя\r\n            if (userxl[id].socketId.length > 1) {\r\n                // удаляем только сокет, если сокеты еще есть\r\n                console.log('user close socket', {user: id});\r\n                userxl[id].socketId.splice(index, 1);\r\n                // userxl[id].device.splice(index,1);\r\n            } else {\r\n                // удаляем сокет и рассылаем сообщения, что пользователь покинул чат, если сокет был последний\r\n                console.log('user delete socket', {user: id});\r\n                User.findOne({login:socket.handshake.doc.user.login},function (err,docz) {\r\n                    if(docz){\r\n                        docz.online=false;\r\n                        docz.lastvisit=timestamp.now();\r\n                        docz.save();\r\n                    }\r\n                });\r\n                delete userxl[id];\r\n                // console.log('user leave chat', {user:id});\r\n                // io.emit('leave chat', {user:id});\r\n            }\r\n            // log({'online users': onlineUsers});\r\n        }\r\n    });\r\n    socket.on('check connection', function (data, callback) {\r\n        console.log('check connection');\r\n        socket.emit('check connection', 'connection ready');\r\n    });\r\n    socket.on('send message', async function (data, callback) {\r\n        //User.findOne({login:data.reciver},async function(err, data) {\r\n        if (empty(data.message) || empty(data.reciver)) {\r\n            socket.emit('send message', 'message dont have reciver or message');\r\n        } else {\r\n            User.findOne({login:data.reciver},async function(err, dataxx){\r\n            const credentials = {\r\n                message: data.message,\r\n                sender: data.sender,\r\n                reciver: data.reciver,\r\n                dialogid: data.dialogid,\r\n                date:timestamp.now(),\r\n                timestamp: parseInt(timestamp.now())\r\n            };\r\n                console.log(credentials);\r\n            data.avatar=dataxx.avatar;\r\n            data.fio=dataxx.firstname+' '+dataxx.lastname;\r\n            socket.emit('send message', credentials);\r\n\r\n            try {\r\n                await Messages.create(credentials);\r\n                Dialogs.findOne({_id: data.dialogid}, function (err, docsxl) {\r\n                    console.log(docsxl);\r\n                    if (docsxl) {\r\n                        docsxl.lastmessage = data.message;\r\n                        docsxl.save();\r\n                    }\r\n\r\n                });\r\n                if (data.reciver in userxl) {\r\n                    // userxl[data.reciver].emit('send message', data);\r\n\r\n                    userxl[data.reciver].socketId.forEach(socketId => {\r\n                        // Новое сообщение для получателя\r\n\r\n                        io.sockets.connected[socketId].emit('new message', credentials);\r\n\r\n                    });\r\n\r\n\r\n\r\n                }\r\n            } catch (err) {\r\n                socket.emit('send message', 'message not saved in db');\r\n            }\r\n\r\n\r\n            //});\r\n        })}\r\n    });\r\n});\r\n\r\n\r\nfunction empty(elem) {\r\n\r\n    // console.log('====>     function empty');\r\n    // log({variable:elem});\r\n\r\n    if (elem === undefined) {\r\n        // console.log('return true - undefined');\r\n        return true;\r\n    }\r\n    if (!elem && elem !== 0 && elem !== false) {\r\n        // console.log('return true - unknown');\r\n        return true;\r\n    }\r\n    if (elem instanceof String && elem.trim() === '') {\r\n        // console.log('return true - empty string');\r\n        return true;\r\n    }\r\n    if (elem instanceof Array && elem.length === 0) {\r\n        // console.log('return true - epmty array');\r\n        return true;\r\n    }\r\n    if (elem instanceof Object && elem === {}) {\r\n        // console.log('return true - empty object');\r\n        return true;\r\n    }\r\n    if (elem == null || elem === null) {\r\n        // console.log('return true - null ');\r\n        return true;\r\n    }\r\n\r\n    // console.log('return false');\r\n    return false;\r\n\r\n}\r\n\r\n\r\napp.listen(config.port, err => {\r\n    if (err) throw err;\r\n    console.log('Server listening on port ' + config.port);\r\n});\r\napp.use(morgan('tiny'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({extended: false}));\r\napp.use(express.static('./uploads'));\r\napp.use(session({\r\n    resave: true,\r\n    saveUninitialized: true,\r\n    secret: config.secret\r\n}));\r\napp.use('/avatars',express.static('./uploads'))\r\napp.use('/api',pages);\r\napp.use('/api',settings);\r\napp.use('/api', AddSocialWebs);\r\napp.use('/api', DialogsRoute);\r\napp.use('/api', smsru);\r\napp.use('/api', authRoute);\r\napp.use('/api', checkToken, userRoute);\r\napp.use(errorHandler);\r\napp.use(getUser);\r\napp.use('/api', checkToken, pageRoute);\r\n\r\n\r\n"]}