{"version":3,"sources":["../../routes/settings.js"],"names":["router","Router","storage","diskStorage","destination","req","file","cb","filename","fieldname","Date","now","upload","post","single","res","findOne","ourtoken","headers","err","data","avatar","save","find","creator","login","datax","i","length","creatorava","datay","json","success","filepath","message","body","firstname","lastname","creatorname","name"],"mappings":"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","file":"settings.js","sourcesContent":["import express from 'express';\r\nimport multer from 'multer';\r\nconst router = express.Router();\r\nimport User from '../models/user';\r\nimport Page from '../models/page'\r\nimport Comments from '../models/Comments';\r\n\r\nvar storage = multer.diskStorage({\r\n    destination: function (req, file, cb) {\r\n        cb(null, 'uploads/')\r\n    },\r\n    filename: function (req, file, cb) {\r\n        cb(null, file.fieldname + '-' + Date.now() + '.jpg')\r\n    }\r\n});\r\n\r\nvar upload = multer({storage: storage});\r\n\r\nrouter.post('/setavatar', upload.single('avatar'), function (req, res) {\r\n    User.findOne({ourtoken: req.headers.ourtoken}, function (err, data) {\r\n        if (data) {\r\n            if (req.file) {\r\n                data.avatar = req.file.filename;\r\n                data.save();\r\n                Page.find({creator: data.login}, async function (err, datax) {\r\n                    for (let i = 0; i < datax.length; i++) {\r\n                        datax[i].creatorava = req.file.filename;\r\n                        datax[i].save();\r\n\r\n                    }\r\n\r\n                });\r\n                Comments.find({creator: data.login}, async function (err, datay) {\r\n                    for (let i = 0; i < datax.length; i++) {\r\n                        datay[i].avatar = req.file.filename;\r\n                        datay[i].save();\r\n\r\n                    }\r\n\r\n                });\r\n                res.json({\r\n                    success: true,\r\n                    filepath: req.file.filename\r\n                });\r\n            } else {\r\n                res.json({\r\n                    success: false,\r\n                    message: 'file isnt uploaded'\r\n                });\r\n            }\r\n        } else {\r\n            res.json({\r\n                success: false,\r\n                message: 'cant find user with this token'\r\n            });\r\n        }\r\n    });\r\n});\r\nrouter.post('/setname', async function (req, res) {\r\n    User.findOne({ourtoken: req.headers.ourtoken}, async function (err, data) {\r\n        if (data && req.body.firstname && req.body.lastname) {\r\n            data.firstname = req.body.firstname;\r\n            data.lastname = req.body.lastname;\r\n            data.save();\r\n            Page.find({creator: data.login}, async function (err, datax) {\r\n                for (let i = 0; i < datax.length; i++) {\r\n                    datax[i].creatorname = req.body.firstname+' '+req.body.lastname;\r\n                    datax[i].save();\r\n\r\n                }\r\n\r\n            });\r\n            Comments.find({creator: data.login}, async function (err, datay) {\r\n                for (let i = 0; i < datay.length; i++) {\r\n                    datay[i].name = req.body.firstname+' '+req.body.lastname;\r\n                    datay[i].save();\r\n\r\n                }\r\n\r\n            });\r\n            res.json({\r\n                success: true,\r\n                message: 'new data was added'\r\n            });\r\n        } else {\r\n            res.json({\r\n                success: false,\r\n                message: 'u dont send first or secondname, or we cant find user by token'\r\n\r\n            });\r\n        }\r\n    });\r\n});\r\nrouter.post('/uploadimage', upload.single('image'), function (req, res) {\r\n    User.findOne({ourtoken: req.headers.ourtoken}, function (err, data) {\r\n        if (data) {\r\n            if (req.file) {\r\n                res.json({\r\n                    success: true,\r\n                    filepath: req.file.filename\r\n                });\r\n            } else {\r\n                res.json({\r\n                    success: false,\r\n                    message: 'file isnt uploaded'\r\n                });\r\n            }\r\n        } else {\r\n            res.json({\r\n                success: false,\r\n                message: 'cant find user with this token'\r\n            });\r\n        }\r\n    });\r\n});\r\nexport default router;\r\n/**\r\n * Created by Anatola on 06.08.2017.\r\n */\r\n"]}