{"version":3,"sources":["../page.js"],"names":["req","res","next","credentials","body","pagebody","title","url","type","findOne","ourtoken","headers","err","data","creator","login","creatorava","avatar","create","page","message","status","json","success","createUser","skip","limit","finalresponse","news_list","find","sort","createdAt","getAllUser","getcurrent","_id","id","datanews","like","indexOf","splice","save","islike","likescount","length","likers","push","addlike","date","Date","now","name","firstname","lastname","newsid","console","log","commentcount","addcomment","commentid","datacomment","remove","removecomment","response","comment_list","getcomments"],"mappings":"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","file":"page.js","sourcesContent":["/**\r\n * Created by Semyon on 31.03.2017.\r\n */\r\nimport Page from '../models/page';\r\nimport User from '../models/user';\r\nimport Comments from '../models/Comments'\r\nexport async function createUser(req,res,next) {\r\n    const credentials=({\r\n        body:req.body.pagebody,\r\n        title:req.body.title,\r\n        url :req.body.url,\r\n        type:'user'\r\n\r\n});\r\nUser.findOne({ourtoken:req.headers.ourtoken},async function (err,data) {\r\n    if(data){\r\n        credentials.creator=data.login;\r\n        credentials.creatorava=data.avatar;\r\n    try {\r\n        var page= await Page.create(credentials);\r\n    }catch ({message}){\r\n        return next({\r\n            status:400,\r\n            message\r\n        });\r\n    }\r\n    res.json({\r\n        success:true,\r\n        message:'page was created'\r\n    });\r\n}else{\r\n    res.json({\r\n        success:false,\r\n        message:'your token is wrong'\r\n    });\r\n    }\r\n});\r\n\r\n}\r\nexport async function getAllUser(req,res,next) {\r\n    User.findOne({ourtoken:req.headers.ourtoken},async function (err,data) {\r\n        let skip = req.body.skip;\r\n        let limit = req.body.limit;\r\n        if (data){\r\n            var finalresponse=({\r\n                success:true,\r\n                news_list:[]\r\n            });\r\n    try {\r\n        finalresponse.news_list = await Page.find({type:'user'},['title','url','body','createdAt','creator','creatorava','like','commentcount'],{skip:skip,limit:limit,sort:{createdAt:-1}});\r\n    }catch ({message}){\r\n        return next({\r\n            status:500,\r\n            message\r\n        });\r\n    }\r\n    res.json(finalresponse);\r\n        }else{\r\n            res.json({\r\n                success:false,\r\n                message:'your token is wrong'\r\n            });\r\n        }\r\n});}\r\n\r\nexport async function getcurrent(req,res,next) {\r\n    User.findOne({ourtoken:req.headers.ourtoken},async function (err,data) {\r\n        let skip = req.body.skip;\r\n        let limit = req.body.limit;\r\n        if (data){\r\n            var finalresponse=({\r\n                success:true,\r\n                news_list:[]\r\n            });\r\n            try {\r\n                finalresponse.news_list = await Page.find({creator:req.body.creator},['title','url','body','createdAt','creator','creatorava','like','commentcount'],{skip:skip,limit:limit,sort:{createdAt:-1}});\r\n            }catch ({message}){\r\n                return next({\r\n                    status:500,\r\n                    message\r\n                });\r\n            }\r\n            res.json(finalresponse);\r\n        }else{\r\n            res.json({\r\n                success:false,\r\n                message:'your token is wrong'\r\n            });\r\n        }\r\n    });\r\n\r\n}\r\nexport async function addlike(req,res,next) {\r\n    User.findOne({ourtoken:req.headers.ourtoken},async function (err,data) {\r\n        if (data){\r\n            Page.findOne({_id:req.body.id},async function(err,datanews){\r\n                if (datanews){\r\n                    if(datanews.like.indexOf(data.login)!=-1){\r\n                        datanews.like.splice(datanews.like.indexOf(data.login),1);\r\n                        datanews.save();\r\n                        res.json({\r\n                            success:true,\r\n                            islike:false,\r\n                            likescount:datanews.like.length,\r\n                            likers:datanews.like\r\n                        })\r\n\r\n                    }else{\r\n                        datanews.like.push(data.login);\r\n                        datanews.save();\r\n                        res.json({\r\n                            success:true,\r\n                            islike:true,\r\n                            likescount:datanews.like.length,\r\n                            likers:datanews.like\r\n                        })\r\n                    }\r\n                }else{\r\n                    res.json({\r\n                        success:false,\r\n                        message:'cant find news by id'\r\n                    })\r\n                }\r\n            })\r\n        }else{\r\n            res.json({\r\n                success:false,\r\n                message:'cant find user by token'\r\n            })\r\n        }\r\n    })\r\n}\r\nexport async function addcomment(req,res,next) {\r\n    User.findOne({ourtoken:req.headers.ourtoken},async function (err,data) {\r\n        if (data){\r\n            Page.findOne({_id:req.body.id},async function(err,datanews){\r\n                if (datanews){\r\n                    let credentials = {\r\n                        creator:data.login,\r\n                        date:Date.now(),\r\n                        name:data.firstname+' '+data.lastname,\r\n                        avatar:data.avatar,\r\n                        message:req.body.message,\r\n                        newsid:req.body.id\r\n                    };\r\n                    await Comments.create(credentials);\r\n                    console.log(credentials);\r\n                    datanews.commentcount++;\r\n                    datanews.save();\r\n                    res.json({\r\n                        success:true,\r\n                        message:'comment created',\r\n\r\n                    })\r\n                }else{\r\n                    res.json({\r\n                        success:false,\r\n                        message:'cant find news by id'\r\n                    })\r\n                }\r\n            })\r\n        }else{\r\n            res.json({\r\n                success:false,\r\n                message:'cant find user by token'\r\n            })\r\n        }\r\n    })\r\n}\r\nexport async function removecomment(req,res,next) {\r\n    User.findOne({ourtoken:req.headers.ourtoken},async function (err,data) {\r\n        if (data){\r\n            Comments.findOne({_id:req.body.commentid},async function (err,datacomment) {\r\n                if(data){\r\n                    if(datacomment.creator === data.login){\r\n                        datacomment.remove();\r\n                        res.json({\r\n                            success:true,\r\n                            commentid:req.body.commentid+' was removed'\r\n                        })\r\n                    }else{\r\n                        res.json({\r\n                            success:false,\r\n                            message:'You cant remove comments of other users'\r\n                        })\r\n                    }\r\n                }else{\r\n                    res.json({\r\n                        success:false,\r\n                        message:'cant find comment with this id'\r\n                    })\r\n                }\r\n            })\r\n        }else{\r\n            res.json({\r\n                success:false,\r\n                message:'cant find user by token'\r\n            })\r\n        }\r\n    })\r\n}\r\nexport async function getcomments(req,res,next) {\r\n    User.findOne({ourtoken:req.headers.ourtoken},async function (err,data) {\r\n        if (data){\r\n            var response={\r\n                success:true,\r\n                comment_list:[]\r\n            };\r\n            response.comment_list = await Comments.find({newsid:req.body.newsid},[],{skip:req.body.skip,limit:req.body.limit,sort:{date:-1}});\r\n            console.log(response.comment_list);\r\n                    res.json(response);\r\n                }\r\n        else{\r\n            res.json({\r\n                success:false,\r\n                message:'cant find user by token'\r\n            })\r\n        }\r\n    })\r\n}"]}