{"version":3,"sources":["../../controllers/page.js"],"names":["req","res","next","credentials","body","pagebody","title","url","createdAt","Date","now","type","findOne","ourtoken","headers","err","data","creator","login","creatorava","avatar","creatorname","firstname","lastname","createAtUnix","create","page","message","status","json","success","createUser","skip","limit","finalresponse","news_list","find","sort","getAllUser","getcurrent","_id","id","datanews","like","indexOf","splice","save","islike","likescount","length","likers","push","addlike","date","name","newsid","console","log","commentcount","addcomment","commentid","datacomment","remove","news","removecomment","removenews","response","comment_list","getcomments","round"],"mappings":"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","file":"page.js","sourcesContent":["/**\r\n * Created by Semyon on 31.03.2017.\r\n */\r\nimport Page from '../models/page';\r\nimport User from '../models/user';\r\nimport Comments from '../models/Comments';\r\nimport timestamp from 'unix-timestamp';\r\ntimestamp.round=true;\r\nexport async function createUser(req, res, next) {\r\n    const credentials = ({\r\n        body: req.body.pagebody,\r\n        title: req.body.title,\r\n        url: req.body.url,\r\n        createdAt: Date.now(),\r\n        type: 'user'\r\n\r\n    });\r\n    User.findOne({ourtoken: req.headers.ourtoken}, async function (err, data) {\r\n        if (data) {\r\n            credentials.creator = data.login;\r\n            credentials.creatorava = data.avatar;\r\n            credentials.creatorname = data.firstname+' '+data.lastname;\r\n            credentials.createAtUnix = timestamp.now();\r\n            try {\r\n                var page = await Page.create(credentials);\r\n            } catch ({message}) {\r\n                return next({\r\n                    status: 400,\r\n                    message\r\n                });\r\n            }\r\n            res.json({\r\n                success: true,\r\n                message: 'page was created'\r\n            });\r\n        } else {\r\n            res.json({\r\n                success: false,\r\n                message: 'your token is wrong'\r\n            });\r\n        }\r\n    });\r\n\r\n}\r\nexport async function getAllUser(req, res, next) {\r\n    User.findOne({ourtoken: req.headers.ourtoken}, async function (err, data) {\r\n        let skip = req.body.skip;\r\n        let limit = req.body.limit;\r\n        if (data) {\r\n            var finalresponse = ({\r\n                success: true,\r\n                news_list: []\r\n            });\r\n            try {\r\n                finalresponse.news_list = await Page.find({}, ['title', 'url', 'body', 'createdAt', 'creator', 'creatorava','creatorname', 'like', 'commentcount','createAtUnix'], {\r\n                    skip: skip,\r\n                    limit: limit,\r\n                    sort: {createdAt: -1}\r\n                });\r\n            } catch ({message}) {\r\n                return next({\r\n                    status: 500,\r\n                    message\r\n                });\r\n            }\r\n            res.json(finalresponse);\r\n        } else {\r\n            res.json({\r\n                success: false,\r\n                message: 'your token is wrong'\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport async function getcurrent(req, res, next) {\r\n    User.findOne({ourtoken: req.headers.ourtoken}, async function (err, data) {\r\n        let skip = req.body.skip;\r\n        let limit = req.body.limit;\r\n        if (data) {\r\n            var finalresponse = ({\r\n                success: true,\r\n                news_list: []\r\n            });\r\n            try {\r\n                finalresponse.news_list = await Page.find({creator: req.body.creator}, ['title', 'url', 'body', 'createdAt', 'creator','creatorname', 'creatorava', 'like', 'commentcount','createAtUnix'], {\r\n                    skip: skip,\r\n                    limit: limit,\r\n                    sort: {createdAt: -1}\r\n                });\r\n            } catch ({message}) {\r\n                return next({\r\n                    status: 500,\r\n                    message\r\n                });\r\n            }\r\n            res.json(finalresponse);\r\n        } else {\r\n            res.json({\r\n                success: false,\r\n                message: 'your token is wrong'\r\n            });\r\n        }\r\n    });\r\n\r\n}\r\nexport async function addlike(req, res, next) {\r\n    User.findOne({ourtoken: req.headers.ourtoken}, async function (err, data) {\r\n        if (data) {\r\n            Page.findOne({_id: req.body.id}, async function (err, datanews) {\r\n                if (datanews) {\r\n                    if (datanews.like.indexOf(data.login) != -1) {\r\n                        datanews.like.splice(datanews.like.indexOf(data.login), 1);\r\n                        datanews.save();\r\n                        res.json({\r\n                            success: true,\r\n                            islike: false,\r\n                            likescount: datanews.like.length,\r\n                            likers: datanews.like\r\n                        })\r\n\r\n                    } else {\r\n                        datanews.like.push(data.login);\r\n                        datanews.save();\r\n                        res.json({\r\n                            success: true,\r\n                            islike: true,\r\n                            likescount: datanews.like.length,\r\n                            likers: datanews.like\r\n                        })\r\n                    }\r\n                } else {\r\n                    res.json({\r\n                        success: false,\r\n                        message: 'cant find news by id'\r\n                    })\r\n                }\r\n            })\r\n        } else {\r\n            res.json({\r\n                success: false,\r\n                message: 'cant find user by token'\r\n            })\r\n        }\r\n    })\r\n}\r\nexport async function addcomment(req, res, next) {\r\n    User.findOne({ourtoken: req.headers.ourtoken}, async function (err, data) {\r\n        if (data) {\r\n            Page.findOne({_id: req.body.id}, async function (err, datanews) {\r\n                if (datanews) {\r\n                    let credentials = {\r\n                        creator: data.login,\r\n                        date: timestamp.now(),\r\n                        name: data.firstname + ' ' + data.lastname,\r\n                        avatar: data.avatar,\r\n                        message: req.body.message,\r\n                        newsid: req.body.id\r\n                    };\r\n                    await Comments.create(credentials);\r\n                    console.log(credentials);\r\n                    datanews.commentcount++;\r\n                    datanews.save();\r\n                    res.json({\r\n                        success: true,\r\n                        message: 'comment created',\r\n\r\n                    })\r\n                } else {\r\n                    res.json({\r\n                        success: false,\r\n                        message: 'cant find news by id'\r\n                    })\r\n                }\r\n            })\r\n        } else {\r\n            res.json({\r\n                success: false,\r\n                message: 'cant find user by token'\r\n            })\r\n        }\r\n    })\r\n}\r\nexport async function removecomment(req, res, next) {\r\n    User.findOne({ourtoken: req.headers.ourtoken}, async function (err, data) {\r\n        if (data) {\r\n            Comments.findOne({_id: req.body.commentid}, async function (err, datacomment) {\r\n                if (data) {\r\n                    if (datacomment.creator === data.login) {\r\n                        datacomment.remove();\r\n                        Page.findOne({_id: datacomment.newsid}, async function (err, news) {\r\n                            news.commentcount--;\r\n                            news.save();\r\n                        });\r\n                        res.json({\r\n                            success: true,\r\n                            commentid: req.body.commentid + ' was removed'\r\n                        })\r\n                    } else {\r\n                        res.json({\r\n                            success: false,\r\n                            message: 'You cant remove comments of other users'\r\n                        })\r\n                    }\r\n                } else {\r\n                    res.json({\r\n                        success: false,\r\n                        message: 'cant find comment with this id'\r\n                    })\r\n                }\r\n            })\r\n        } else {\r\n            res.json({\r\n                success: false,\r\n                message: 'cant find user by token'\r\n            })\r\n        }\r\n    })\r\n}\r\nexport async function removenews(req, res, next) {\r\n    User.findOne({ourtoken: req.headers.ourtoken}, async function (err, data) {\r\n        if (data) {\r\n            Page.findOne({_id: req.body.newsid}, async function (err, datanews) {\r\n                if (datanews) {\r\n                    if (datanews.creator === data.login) {\r\n                        datanews.remove();\r\n                        res.json({\r\n                            success: true,\r\n                            newsid: req.body.newsid + ' was removed'\r\n                        })\r\n                    } else {\r\n                        res.json({\r\n                            success: false,\r\n                            message: 'You cant remove news of other users'\r\n                        })\r\n                    }\r\n                } else {\r\n                    res.json({\r\n                        success: false,\r\n                        message: 'cant find news with this id'\r\n                    })\r\n                }\r\n            })\r\n        } else {\r\n            res.json({\r\n                success: false,\r\n                message: 'cant find user by token'\r\n            })\r\n        }\r\n    })\r\n}\r\nexport async function getcomments(req, res, next) {\r\n    User.findOne({ourtoken: req.headers.ourtoken}, async function (err, data) {\r\n        if (data) {\r\n            var response = {\r\n                success: true,\r\n                comment_list: []\r\n            };\r\n            response.comment_list = await Comments.find({newsid: req.body.newsid}, [], {\r\n                skip: req.body.skip,\r\n                limit: req.body.limit,\r\n                sort: {date: -1}\r\n            });\r\n            console.log(response.comment_list);\r\n            res.json(response);\r\n        }\r\n        else {\r\n            res.json({\r\n                success: false,\r\n                message: 'cant find user by token'\r\n            })\r\n        }\r\n    })\r\n}"]}