{"version":3,"sources":["../../controllers/auth.js"],"names":["signup","req","res","next","currentthing","body","login","replace","console","log","length","credentials","password","email","user","findOne","err","userx","create","message","success","status","json","confirmed","save","signin","comparePasswords","result","ourtoken","token","sign","_id","secret"],"mappings":"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","file":"auth.js","sourcesContent":["/**\r\n * Created by Semyon on 30.03.2017.\r\n */\r\nimport User from '../models/user';\r\nimport jwt from 'jsonwebtoken';\r\nimport config from '../config';\r\n\r\n\r\nexport const signup = async (req, res, next) => {\r\n    let currentthing = req.body.login.replace(/\\D+/g,\"\");\r\n    console.log(currentthing.length);\r\n    if(currentthing.length === 11){\r\n    let credentials = {\r\n        password: req.body.password,\r\n        login:currentthing,\r\n        email:req.body.email,\r\n        };\r\n    let user;\r\n    User.findOne({login:req.body.login},async function (err,userx) {\r\n        console.log(userx);\r\n    if (!userx){\r\n        try {\r\n            user = await User.create(credentials);\r\n        }catch ({message}){\r\n            return next({\r\n                success:false,\r\n                status:400,\r\n                message:message\r\n            });\r\n        }\r\n        res.json({\r\n            success:true,\r\n            login:user.login,\r\n        });\r\n    }else{if(userx.confirmed !== 1){\r\n        userx.login = credentials.login;\r\n        userx.password=credentials.password;\r\n        userx.email=credentials.email;\r\n        userx.save();\r\n        res.json({\r\n           success:true,\r\n            login:userx.login,\r\n            message:'user was successfully rewrited'\r\n        });\r\n    }else{\r\n        res.json({\r\n            success:false,\r\n            status:400,\r\n            message:'this username was already validated'\r\n        });\r\n    }\r\n    }\r\n\r\n})}else{\r\n        res.json({\r\n            success:false,\r\n            message:'your login should have 11 nums'\r\n        })\r\n    }};\r\nexport const signin = async (req, res, next) => {\r\n    const login = req.body.login,\r\n            password = req.body.password;\r\n    await User.findOne({login:login}, async function (err,user) {\r\n        if (!user){\r\n            return res.json({\r\n                success:false,\r\n                status:400,\r\n                message:'user not found'\r\n            });\r\n        }else{\r\n        try {\r\n            var result = await user.comparePasswords(password);\r\n        }catch (e){\r\n            return res.json({\r\n                success:false,\r\n                status:400,\r\n                message:'Bad Credentials'\r\n            });\r\n        }\r\n        if(result == false){\r\n            res.json({\r\n                success:false,\r\n                status:400,\r\n                message:'wrong login or password'\r\n            });}else{\r\n            console.log(user.ourtoken);\r\n        if (user.ourtoken !== '0'){\r\n            res.json({\r\n                success:true,\r\n                login:user.login,\r\n                token:user.ourtoken\r\n            });}else{\r\n            const token = jwt.sign({_id: login}, config.secret);\r\n            user.ourtoken=token;\r\n            console.log(user);\r\n            user.save();\r\n            res.json({\r\n                success:true,\r\n                token:user.ourtoken,\r\n                login:user.login\r\n            })\r\n        }}\r\n        }});\r\n\r\n\r\n};\r\n"]}