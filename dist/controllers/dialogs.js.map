{"version":3,"sources":["../../controllers/dialogs.js"],"names":["https","require","createdialog","req","res","next","credentials","secondguy","body","findOne","ourtoken","headers","err","userx","newdialog","Dialog","$or","firstguy","login","docs","usery","create","json","success","status","message","id","update","updated","lastmessage","dialogid","getdialogs","limit","Number","parseInt","skip","person","console","log","find","sort","length","finalresponse","dialog_list","i","checkcicle","userok","firstname","lastname","obj","reciver","_id","name","avatar","idvk","idfb","idinsta","idok","push","currrent","getmessages","docx","date","response","message_list","Array","prototype","apply","getuser","user_list","list","compareAge","a","b","c","toUpperCase","d","registered","unregistered","gsonlist","JSON","parse","phone","replace","toString","slice","checker","variable","isRegistered","concat","getuserinfo","email","online","lastvisit","getuserbylogin","deletemessage","findByIdAndRemove","todo","send"],"mappings":"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","file":"dialogs.js","sourcesContent":["/**\r\n * Created by Semyon on 24.07.2017.\r\n */\r\nimport Dialogs from '../models/Dialogs';\r\nimport User from '../models/user';\r\nimport Messages from '../models/Messages';\r\nimport parse from 'parse-json-response';\r\nconst https = require('https');\r\n\r\nexport const createdialog = async (req, res, next) => {\r\n    const credentials = {\r\n        secondguy: req.body.secondguy\r\n    };\r\n    try {\r\n        User.findOne({ourtoken: req.headers.ourtoken}, async function (err, userx) {\r\n            if (userx) {\r\n                let newdialog;\r\n                const Dialog = Dialogs.findOne({\r\n                    $or: [{firstguy: userx.login, secondguy: credentials.secondguy},\r\n                        {firstguy: credentials.secondguy, secondguy: userx.login}]\r\n                }, async function (err, docs) {\r\n\r\n                    if (!docs) {\r\n                        Dialogs.findOne({login: credentials.secondguy}, async function (err, usery) {\r\n                                if (!usery) {\r\n\r\n                                    try {\r\n                                        newdialog = await Dialogs.create({\r\n                                            firstguy: userx.login,\r\n                                            secondguy: credentials.secondguy\r\n                                        });\r\n                                    } catch (err) {\r\n                                        res.json({\r\n                                            success: false,\r\n                                            status: 400,\r\n                                            message: 'bad credentials'\r\n                                        });\r\n                                    }\r\n                                    res.json({\r\n                                        success: true,\r\n                                        firstguy: newdialog.firstguy,\r\n                                        secondguy: newdialog.secondguy,\r\n                                        id: newdialog.id,\r\n                                        update: newdialog.updated,\r\n                                        lastmessage: newdialog.lastmessage\r\n                                    });\r\n                                } else {\r\n                                    res.json({\r\n                                        success: false,\r\n                                        message: 'Cant find user ' + credentials.secondguy\r\n                                    })\r\n                                }\r\n                            }\r\n                        );\r\n                    } else {\r\n                        res.json({\r\n                            success: false,\r\n                            message: 'Dialog already exist.',\r\n                            dialogid: docs.id\r\n                        });\r\n\r\n                    }\r\n                });\r\n            } else {\r\n                res.json({\r\n                    success: false,\r\n                    status: 400,\r\n                    message: 'Cant find user with this token. Check your token'\r\n                });\r\n            }\r\n\r\n        });\r\n    } catch (err) {\r\n        res.json({\r\n            success: false,\r\n            status: 400,\r\n            message: 'Something goes bad(semyon ne vinovat(ni v chem))'\r\n        });\r\n    }\r\n\r\n};\r\nexport const getdialogs = async (req, res, next) => {\r\n    const limit = Number.parseInt(req.body.limit);\r\n    const skip = Number.parseInt(req.body.skip);\r\n\r\n    try {\r\n        User.findOne({ourtoken: req.headers.ourtoken}, async function (err, userx) {\r\n            if (userx) {\r\n                let person = userx.login;\r\n                console.log(person + '-LOLOLOLOLOLOLOOLLO');\r\n                Dialogs.find({$or: [{firstguy: person}, {secondguy: person}]},\r\n                    ['firstguy', 'lastmessage', 'secondguy', 'id', 'updated'],\r\n                    {skip: skip, limit: limit, sort: {updated: -1}}, async function (err, docs) {\r\n                        console.log(docs);\r\n                        if (!docs.length) {\r\n                            res.json({\r\n                                success: false,\r\n                                message: 'you dont have dialogs yet'\r\n                            });\r\n                        } else {\r\n\r\n                            var finalresponse = ({\r\n                                success: true,\r\n                                dialog_list: []\r\n                            });\r\n\r\n                            for (let i = 0; i < docs.length; i++) {\r\n                                if (i === 0) {\r\n                                    var checkcicle = 1;\r\n                                }\r\n\r\n                                if (docs[i].firstguy === person) {\r\n                                    User.findOne({login: docs[i].secondguy}, async function (err, userok) {\r\n\r\n                                        if (userok) {\r\n                                            if (userok.firstname && userok.lastname) {\r\n                                                var obj = {\r\n                                                    reciver: docs[i].secondguy,\r\n                                                    dialogid: docs[i]._id,\r\n                                                    lastmessage: docs[i].lastmessage,\r\n                                                    updated: docs[i].updated,\r\n                                                    name: userok.firstname + ' ' + userok.lastname,\r\n                                                    avatar: userok.avatar,\r\n                                                    idvk: userok.idvk,\r\n                                                    idfb:userok.idfb,\r\n                                                    idinsta:userok.idinsta,\r\n                                                    idok:userok.idok\r\n                                                };\r\n                                            } else {\r\n                                                var obj = {\r\n                                                    reciver: docs[i].secondguy,\r\n                                                    dialogid: docs[i]._id,\r\n                                                    lastmessage: docs[i].lastmessage,\r\n                                                    updated: docs[i].updated,\r\n                                                    name: docs[i].secondguy,\r\n                                                    avatar: userok.avatar,\r\n                                                    idvk: userok.idvk,\r\n                                                    idfb:userok.idfb,\r\n                                                    idinsta:userok.idinsta,\r\n                                                    idok:userok.idok\r\n                                                };\r\n                                            }\r\n                                            finalresponse.dialog_list.push(obj);\r\n                                            let currrent = i + 1;\r\n                                            console.log('odin proshel_' + currrent);\r\n                                            if (parseInt(checkcicle) === parseInt(docs.length)) {\r\n                                                console.log('uehal iz 1');\r\n                                                res.json(finalresponse);\r\n                                            }\r\n                                            checkcicle++;\r\n                                            console.log(checkcicle + 'rolf');\r\n                                        } else {\r\n                                            checkcicle++;\r\n                                        }\r\n                                        // else{\r\n                                        //     res.json({\r\n                                        //         success:false,\r\n                                        //         message:'cant find user with this login'\r\n                                        //     });\r\n                                        // }\r\n                                    });\r\n                                } else {\r\n                                    User.findOne({login: docs[i].firstguy}, function (err, userok) {\r\n                                        if (userok) {\r\n                                            if (userok.firstname && userok.lastname) {\r\n                                                var obj = {\r\n                                                    reciver: docs[i].firstguy,\r\n                                                    dialogid: docs[i]._id,\r\n                                                    lastmessage: docs[i].lastmessage,\r\n                                                    updated: docs[i].updated,\r\n                                                    name: userok.firstname + ' ' + userok.lastname,\r\n                                                    avatar: userok.avatar,\r\n                                                    idvk: userok.idvk,\r\n                                                    idfb:userok.idfb,\r\n                                                    idinsta:userok.idinsta,\r\n                                                    idok:userok.idok\r\n                                                };\r\n                                            } else {\r\n                                                var obj = {\r\n                                                    reciver: docs[i].firstguy,\r\n                                                    dialogid: docs[i]._id,\r\n                                                    lastmessage: docs[i].lastmessage,\r\n                                                    updated: docs[i].updated,\r\n                                                    name: docs[i].firstguy,\r\n                                                    avatar: userok.avatar,\r\n                                                    idvk: userok.idvk,\r\n                                                    idfb:userok.idfb,\r\n                                                    idinsta:userok.idinsta,\r\n                                                    idok:userok.idok\r\n                                                };\r\n                                            }\r\n                                            finalresponse.dialog_list.push(obj);\r\n                                            let currrent = i + 1;\r\n                                            console.log('odin proshel_' + currrent);\r\n                                            if (parseInt(checkcicle) === parseInt(docs.length)) {\r\n                                                res.json(finalresponse);\r\n                                                console.log('uehal iz 2');\r\n                                            }\r\n                                            checkcicle++;\r\n                                        } else {\r\n                                            checkcicle++;\r\n                                        }\r\n                                        //     else{\r\n                                        //     res.json({\r\n                                        //         success:false,\r\n                                        //         message:'cant find user with this login'\r\n                                        //     });\r\n                                        // }\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    });\r\n            } else {\r\n                res.json({\r\n                    success: false,\r\n                    status: 400,\r\n                    message: 'Cant find user with this token. Check your token'\r\n                });\r\n            }\r\n        });\r\n    } catch (err) {\r\n    }\r\n};\r\nexport const getmessages = async (req, res, next) => {\r\n    const limit = Number.parseInt(req.body.limit);\r\n    const skip = Number.parseInt(req.body.skip);\r\n    console.log(req.body.dialogid);\r\n    User.findOne({ourtoken: req.headers.ourtoken}, function (err, docx) {\r\n        if (err) {\r\n            res.json({\r\n                success: false,\r\n                message: 'some error while finding user by token'\r\n            })\r\n        } else {\r\n            if (docx) {\r\n                Messages.find({dialogid: req.body.dialogid},\r\n                    ['date', 'message', 'sender', 'reciver', 'dialogid', 'timestamp'],\r\n                    {skip: skip, limit: limit, sort: {date: 1}}, function (err, docs) {\r\n                        if (!docs.length) {\r\n                            res.json({\r\n                                success: false,\r\n                                message: 'you dont have messages yet'\r\n                            });\r\n                        } else {\r\n                            let response = {\r\n                                success: true,\r\n                                message_list: []\r\n                            };\r\n                            Array.prototype.push.apply(response.message_list, docs);\r\n                            res.json(response);\r\n                        }\r\n                    });\r\n            } else {\r\n                let response = {\r\n                    success: true,\r\n                    message_list: []\r\n                };\r\n                res.json(response);\r\n            }\r\n        }\r\n    });\r\n\r\n};\r\nexport const getuser = async (req, res, next) => {\r\n    var response = {\r\n        success: true,\r\n        user_list: []\r\n    };\r\n    if (req.body.list){\r\n    var registered = [];\r\n    var unregistered = [];\r\n    var gsonlist = req.body.list;\r\n    gsonlist = JSON.parse(gsonlist);\r\n    console.log(gsonlist);\r\n    function compareAge(a, b) {\r\n        var c = a.name.toUpperCase(),\r\n            d = b.name.toUpperCase();\r\n\r\n        if (c < d) {\r\n            return -1;\r\n        } else if (c > d) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    };\r\n\r\n     for (let i = 0; i < gsonlist.length; i++) {\r\n\r\n        gsonlist[i].phone = parseInt(gsonlist[i].phone.replace(/\\D+/g, \"\")).toString(10);\r\n        if (gsonlist[i].phone[0] == '8') {\r\n            gsonlist[i].phone = gsonlist[i].phone.slice(1, gsonlist[i].phone.length);\r\n            gsonlist[i].phone = '7' + gsonlist[i].phone;\r\n        }\r\n        if (i === 0) {\r\n            var checker = 1;\r\n        }\r\n        User.findOne({login: gsonlist[i].phone}, function (err, docs) {\r\n\r\n            if (docs) {\r\n                let variable = {\r\n                    phone: gsonlist[i].phone,\r\n                    avatar: docs.avatar,\r\n                    name: gsonlist[i].name,\r\n                    id: docs.login,\r\n                    isRegistered: true\r\n                };\r\n                registered.push(variable);\r\n                if (parseInt(checker) === parseInt(gsonlist.length)) {\r\n                    response.user_list = response.user_list.concat(registered.sort(compareAge));\r\n                    response.user_list = response.user_list.concat(unregistered.sort(compareAge));\r\n                    res.json(response);\r\n                } else {\r\n                    checker++;\r\n                }\r\n            } else {\r\n                let variable = {\r\n                    phone: gsonlist[i].phone,\r\n                    avatar: gsonlist[i].avatar,\r\n                    name: gsonlist[i].name,\r\n                    isRegistered: false\r\n                };\r\n                unregistered.push(variable);\r\n                if (parseInt(checker) === parseInt(gsonlist.length)) {\r\n                    response.user_list = response.user_list.concat(registered.sort(compareAge));\r\n                    response.user_list = response.user_list.concat(unregistered.sort(compareAge));\r\n                    res.json(response);\r\n                } else {\r\n                    checker++;\r\n                }\r\n            }\r\n\r\n        });\r\n    }\r\n    }else{\r\n        res.json(response);\r\n    }\r\n};\r\n\r\nexport const getuserinfo = async (req, res, next) => {\r\n    User.findOne({ourtoken: req.headers.ourtoken}, function (err, docs) {\r\n        if (err) {\r\n            res.json({\r\n                success: false,\r\n                message: 'some error with request'\r\n            });\r\n        } else {\r\n            if (docs) {\r\n                res.json({\r\n                    success: true,\r\n                    login: docs.login,\r\n                    email: docs.email,\r\n                    firstname: docs.firstname,\r\n                    lastname: docs.lastname,\r\n                    avatar: docs.avatar,\r\n                    idvk: docs.idvk,\r\n                    idfb:docs.idfb,\r\n                    idinsta:docs.idinsta,\r\n                    idok:docs.idok,\r\n                    online:docs.online,\r\n                    lastvisit:docs.lastvisit\r\n                });\r\n            } else {\r\n                res.json({\r\n                    success: false,\r\n                    message: 'cant find user with this token'\r\n                })\r\n            }\r\n        }\r\n    });\r\n};\r\nexport const getuserbylogin = async (req, res, next) => {\r\n    User.findOne({login: req.body.login}, function (err, docs) {\r\n        if (err) {\r\n            res.json({\r\n                success: false,\r\n                message: 'some error with request'\r\n            });\r\n        } else {\r\n            if (docs) {\r\n                res.json({\r\n                    success: true,\r\n                    login: docs.login,\r\n                    email: docs.email,\r\n                    firstname: docs.firstname,\r\n                    lastname: docs.lastname,\r\n                    avatar: docs.avatar,\r\n                    idvk: docs.idvk,\r\n                    idfb:docs.idfb,\r\n                    idinsta:docs.idinsta,\r\n                    idok:docs.idok,\r\n                    online:docs.online,\r\n                    lastvisit:docs.lastvisit\r\n                });\r\n            } else {\r\n                res.json({\r\n                    success: false,\r\n                    message: 'cant find user with this login'\r\n                })\r\n            }\r\n        }\r\n    });\r\n};\r\nexport const deletemessage = async (req, res, next) => {\r\n    Messages.findByIdAndRemove(req.body.id, function (err, todo) {\r\n        // We'll create a simple object to send back with a message and the id of the document that was removed\r\n        // You can really do this however you want, though.\r\n        var response = {\r\n            message: \"Todo successfully deleted\",\r\n            id: todo._id\r\n        };\r\n        res.send(response);\r\n    });\r\n};"]}